# Import required library
import turtle
import sys
import time


def play_game(score):
    
    sc = turtle.Screen()
    sc.title("PONG")
    sc.bgcolor("black")
    sc.setup(width=1000, height=600)


# Left paddle
    left_pad = turtle.Turtle()
    left_pad.speed(0)
    left_pad.shape("square")
    left_pad.color("white")
    left_pad.shapesize(stretch_wid=6, stretch_len=2)
    left_pad.penup()
    left_pad.goto(-400, 0)


# Right paddle
    right_pad = turtle.Turtle()
    right_pad.speed(0)
    right_pad.shape("square")
    right_pad.color("white")
    right_pad.shapesize(stretch_wid=6, stretch_len=2)
    right_pad.penup()
    right_pad.goto(400, 0)


# Ball of circle shape
    hit_ball = turtle.Turtle()
    hit_ball.speed(55)
    hit_ball.shape("circle")
    hit_ball.color("cyan")
    hit_ball.penup()
    hit_ball.goto(0, 0)
    hit_ball.dx = 5
    hit_ball.dy = -5


# Initialize the score
    left_player = 0
    right_player = 0


# Displays the score
    sketch = turtle.Turtle()
    sketch.speed(0)
    sketch.color("cyan")
    sketch.penup()
    sketch.hideturtle()
    sketch.goto(0, 260)
    sketch.write("Player A : 0 Player B: 0",
                align="center", font=("Courier", 24, "normal"))

    sketch1 = turtle.Turtle()
    sketch1.speed(0)
    sketch1.color("cyan")
    sketch1.penup()
    sketch1.hideturtle()
    sketch1.goto(0,-260)
    
    

    sketch2 = turtle.Turtle()
    sketch2.speed(0)
    sketch2.color("cyan")
    sketch2.penup()
    sketch2.hideturtle()
    sketch2.goto(0, -260)
    

    


    # Functions to move paddle vertically
    def paddleaup():
    	y = left_pad.ycor()
    	y += 20
    	left_pad.sety(y)


    def paddleadown():
    	y = left_pad.ycor()
    	y -= 20
    	left_pad.sety(y)


    def paddlebup():
    	y = right_pad.ycor()
    	y += 20
    	right_pad.sety(y)


    def paddlebdown():
    	y = right_pad.ycor()
    	y -= 20
    	right_pad.sety(y)


# Keyboard bindings
    sc.listen()
    sc.onkeypress(paddleaup, "w")
    sc.onkeypress(paddleadown, "s")
    sc.onkeypress(paddlebup, "Up")
    sc.onkeypress(paddlebdown, "Down")


    while True:
    
        sc.update()
        
        hit_ball.setx(hit_ball.xcor()+hit_ball.dx)
        hit_ball.sety(hit_ball.ycor()+hit_ball.dy)

	# Checking borders
        if hit_ball.ycor() > 280:
        	hit_ball.sety(280)
        	hit_ball.dy *= -1

        if hit_ball.ycor() < -280:
        	hit_ball.sety(-280)
        	hit_ball.dy *= -1

        if hit_ball.xcor() > 500:
        	hit_ball.goto(0, 0)
        	hit_ball.dy *= -1
        	left_player += 1
        	sketch.clear()
        	sketch.write("Player A : {} Player B: {}".format(
        				left_player, right_player), align="center",
        				font=("Courier", 24, "normal"))

        if hit_ball.xcor() < -500:
        	hit_ball.goto(0, 0)
        	hit_ball.dy *= -1
        	right_player += 1
        	sketch.clear()
        	sketch.write("Player A : {} Player B: {}".format(
        							left_player, right_player), align="center",
        							font=("Courier", 24, "normal"))

    	# Paddle ball collision
        if (hit_ball.xcor() > 360 and hit_ball.xcor() < 370) and (hit_ball.ycor() < right_pad.ycor()+40 and hit_ball.ycor() > right_pad.ycor()-40):
        	hit_ball.setx(360)
        	hit_ball.dx*=-1
		
        if (hit_ball.xcor()<-360 and hit_ball.xcor()>-370) and (hit_ball.ycor()<left_pad.ycor()+40 and hit_ball.ycor()>left_pad.ycor()-40):
        	hit_ball.setx(-360)
        	hit_ball.dx*=-1

        if left_player == score or right_player == score:
            
            if left_player == score:
                sketch1.write("Player A has won!!",
                align="center", font=("Courier", 24, "normal"))
                time.sleep(1000)
                

            else:
                sketch2.write("Player B has won!!",
                align="center", font=("Courier", 24, "normal"))
                time.sleep(1000)
                
                


score = int(input("Please Enter the Score: "))
play_game(score)
